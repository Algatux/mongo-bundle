name: CI

on:
  pull_request: ~
  push:
    branches:
      - master

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    services:
      mongo:
        image: ${{ matrix.mongo-img }}
        env:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: rootPass
        options: >-
          --health-cmd /etc/init.d/mongodb status || exit 1
          --health-interval 5s
          --health-timeout 3s
          --health-retries 5

    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        include:
        - php: 7.2
          mongoext: 1.3.0-20201126
          mongo-img: mongo:3.4
          symfony: '3.4.*'
        - php: 7.2
          mongoext: 1.3.0-20201126
          mongo-img: mongo:3.4
          symfony: '4.3.*'
        - php: 7.2
          mongoext: 1.3.0-20201126
          mongo-img: mongo:3.4
          symfony: '4.4.*'
        - php: 7.2
          mongoext: 1.3.0-20201126
          mongo-img: mongo:3.4
          symfony: 'dev-master'
          experimental: true
        - php: 7.2
          mongoext: 1.5.3-20201126
          mongo-img: percona/percona-server-mongodb:4.0
        - php: 7.2
          mongoext: 1.6.0-20201126
          mongo-img: percona/percona-server-mongodb:4.2
        - php: 7.2
          mongoext: 1.8.0-20201126
          mongo-img: percona/percona-server-mongodb:4.4
        - php: 7.2
          mongoext: 1.9.0-20201126
          mongo-img: percona/percona-server-mongodb:4.4
        - php: 7.3
          mongoext: 1.5.3-20201126
          mongo-img: mongo:4.0
        - php: 7.3
          mongoext: 1.5.3-20201126
          mongo-img: percona/percona-server-mongodb:4.0
        - php: 7.4
          mongoext: 1.6.0-20201126
          mongo-img: percona/percona-server-mongodb:4.2
        - php: 7.4
          mongoext: 1.9.0-20201126
          mongo-img: percona/percona-server-mongodb:4.4

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
      - name: Allow unstable dependencies
        run: composer config minimum-stability dev
        if: matrix.symfony == 'dev-master'
      - name: Restrict Symfony version
        run: composer require "symfony/symfony:${SYMFONY}" --no-update
        if: matrix.symfony
      - name: Install dependencies
        uses: "ramsey/composer-install@v1"
#        dependency-versions: "${{ matrix.dependencies }}"
      - name: Run script
      - name: Run tests
        run: vendor/bin/phpunit --coverage-clover=build/coverage-report.xml
      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          file: build/coverage-report.xml
